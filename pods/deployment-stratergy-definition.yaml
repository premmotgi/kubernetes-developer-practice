apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"1"},"creationTimestamp":"2020-05-17T20:12:13Z","generation":1,"name":"frontend","namespace":"default","resourceVersion":"1658","selfLink":"/apis/apps/v1/namespaces/default/deployments/frontend","uid":"d591fe92-5c1a-4b0f-8882-c3f21303f639"},"spec":{"minReadySeconds":20,"progressDeadlineSeconds":600,"replicas":4,"revisionHistoryLimit":10,"selector":{"matchLabels":{"name":"webapp"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"webapp"}},"spec":{"containers":[{"image":"kodekloud/webapp-color:v2","imagePullPolicy":"IfNotPresent","name":"simple-webapp","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}},"status":{"availableReplicas":4,"conditions":[{"lastTransitionTime":"2020-05-17T20:13:10Z","lastUpdateTime":"2020-05-17T20:13:10Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2020-05-17T20:12:13Z","lastUpdateTime":"2020-05-17T20:13:10Z","message":"ReplicaSet \"frontend-57d7bb8dbd\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":1,"readyReplicas":4,"replicas":4,"updatedReplicas":4}}
  creationTimestamp: "2020-05-17T20:12:13Z"
  generation: 2
  name: frontend
  namespace: default
  resourceVersion: "2167"
  selfLink: /apis/apps/v1/namespaces/default/deployments/frontend
  uid: d591fe92-5c1a-4b0f-8882-c3f21303f639
spec:
  minReadySeconds: 20
  progressDeadlineSeconds: 600
  replicas: 4
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: webapp
  strategy:
    #    rollingUpdate:
    #      maxSurge: 25%
    #      maxUnavailable: 25%
    type: Recreate #RollingUpdate by default
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: webapp
    spec:
      containers:
        - image: kodekloud/webapp-color:v2
          imagePullPolicy: IfNotPresent
          name: simple-webapp
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 4
  conditions:
    - lastTransitionTime: "2020-05-17T20:13:10Z"
      lastUpdateTime: "2020-05-17T20:13:10Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-05-17T20:12:13Z"
      lastUpdateTime: "2020-05-17T20:18:14Z"
      message: ReplicaSet "frontend-84bb97f469" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
  observedGeneration: 2
  readyReplicas: 4
  replicas: 4
  updatedReplicas: 4