Creating secrets:

kubectl create secret generic
    <secret-name> --from-literal=<key>:<value>


example:

kubectl create secret generic \
        app-secret --from-literal=DB_Host=mysql

desscribe:

kubectl describe secrets
kubectl describe secret <secret-name> -o yaml > filenametocreate

From File:

kubectl create secret generic
    <secret-name> --from-file=<path-to-file>


Declarative definition file:

    apiVersion: v1
    kind: Secret
    metadata:
      name: webapp-config-map
    data:
        KEY:VALUE
        KEY:VALUE
        KEY:VALUE

Since this way stores the data in file format, store the VALUE in hash format



Converting into hash value from linux comand:

echo -n 'key' | base64


decoding from hash to plaintext:

echo -n 'hashValue' | base64

Usage in file:

envFrom:
    - secretRef:
        name: <secret-name>

2)

env:
    - name: <Key_NAME>
      valueFrom:
        secretKeyRef:
            name: app-secret
            key: DB_PASSWORD

3)

volumes:
    - name: <volume-name>
      secret:
        secretName: <name of secret>

Here secret file is mapped and all the secret values are mapped in volume.
for each of the secret, a file is created in /opt/<volume-name>/<secret-key>

